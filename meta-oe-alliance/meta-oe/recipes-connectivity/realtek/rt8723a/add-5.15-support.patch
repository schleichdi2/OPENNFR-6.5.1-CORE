diff --git a/core/rtw_br_ext.c b/core/rtw_br_ext.c
index 7b99e48..845d4f2 100644
--- a/core/rtw_br_ext.c
+++ b/core/rtw_br_ext.c
@@ -22,7 +22,10 @@
 #ifdef __KERNEL__
 #include <linux/if_arp.h>
 #include <net/ip.h>
+#include <linux/version.h>
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 15, 0))
 #include <net/ipx.h>
+#endif
 #include <linux/atalk.h>
 #include <linux/udp.h>
 #include <linux/if_pppox.h>
@@ -154,6 +157,7 @@ static inline void __nat25_generate_ipv4_network_addr(unsigned char *networkAddr
 	memcpy(networkAddr+7, (unsigned char *)ipAddr, 4);
 }
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 15, 0))
 static inline void __nat25_generate_ipx_network_addr_with_node(unsigned char *networkAddr,
 				unsigned int *ipxNetAddr, unsigned char *ipxNodeAddr)
 {
@@ -173,6 +177,7 @@ static inline void __nat25_generate_ipx_network_addr_with_socket(unsigned char *
 	memcpy(networkAddr+1, (unsigned char *)ipxNetAddr, 4);
 	memcpy(networkAddr+5, (unsigned char *)ipxSocketAddr, 2);
 }
+#endif
 
 static inline void __nat25_generate_apple_network_addr(unsigned char *networkAddr,
 				unsigned short *network, unsigned char *node)
@@ -890,6 +895,7 @@ int nat25_db_handle(struct rtw_adapter *priv, struct sk_buff *skb, int method)
 		}
 	}
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 15, 0))
 	/*---------------------------------------------------*/
 	/*         Handle IPX and Apple Talk frame           */
 	/*---------------------------------------------------*/
@@ -1153,6 +1159,7 @@ int nat25_db_handle(struct rtw_adapter *priv, struct sk_buff *skb, int method)
 
 		return -1;
 	}
+#endif
 
 	/*---------------------------------------------------*/
 	/*                Handle PPPoE frame                 */
diff --git a/os_dep/osdep_service.c b/os_dep/osdep_service.c
index ff19aba..1e845a3 100644
--- a/os_dep/osdep_service.c
+++ b/os_dep/osdep_service.c
@@ -343,6 +343,9 @@ static int isFileReadable(char *path)
 		ret = PTR_ERR(fp);
 	}
 	else {
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,10,0))
+		oldfs = force_uaccess_begin();
+#else
 		oldfs = get_fs(); set_fs(
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,1,0))
 				KERNEL_DS
@@ -350,11 +353,16 @@ static int isFileReadable(char *path)
 				get_ds()
 #endif
 				);
+#endif
 
 		if(1!=readFile(fp, &buf, 1))
 			ret = PTR_ERR(fp);
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,10,0))
+		force_uaccess_end(oldfs);
+#else
 		set_fs(oldfs);
+#endif
 		filp_close(fp,NULL);
 	}
 	return ret;
@@ -377,6 +385,9 @@ static int retriveFromFile(char *path, u8* buf, u32 sz)
 		if( 0 == (ret=openFile(&fp,path, O_RDONLY, 0)) ){
 			DBG_8723A("%s openFile path:%s fp=%p\n",__FUNCTION__, path ,fp);
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,10,0))
+			oldfs = force_uaccess_begin();
+#else
 			oldfs = get_fs(); set_fs(
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,1,0))
 					KERNEL_DS
@@ -384,8 +395,13 @@ static int retriveFromFile(char *path, u8* buf, u32 sz)
 					get_ds()
 #endif
 					);
+#endif
 			ret=readFile(fp, buf, sz);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,10,0))
+			force_uaccess_end(oldfs);
+#else
 			set_fs(oldfs);
+#endif
 			closeFile(fp);
 
 			DBG_8723A("%s readFile, ret:%d\n",__FUNCTION__, ret);
@@ -417,6 +433,9 @@ static int storeToFile(char *path, u8* buf, u32 sz)
 		if( 0 == (ret=openFile(&fp, path, O_CREAT|O_WRONLY, 0666)) ) {
 			DBG_8723A("%s openFile path:%s fp=%p\n",__FUNCTION__, path ,fp);
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,10,0))
+			oldfs = force_uaccess_begin();
+#else
 			oldfs = get_fs(); set_fs(
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,1,0))
 					KERNEL_DS
@@ -424,8 +443,13 @@ static int storeToFile(char *path, u8* buf, u32 sz)
 					get_ds()
 #endif
 					);
+#endif
 			ret=writeFile(fp, buf, sz);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,10,0))
+			force_uaccess_end(oldfs);
+#else
 			set_fs(oldfs);
+#endif
 			closeFile(fp);
 
 			DBG_8723A("%s writeFile, ret:%d\n",__FUNCTION__, ret);
