From faedd5f6ebe548da8fff0939f23a5147503de230 Mon Sep 17 00:00:00 2001
From: Captain <captain.onboard@web.de>
Date: Wed, 15 Jul 2020 21:42:24 +0200
Subject: [PATCH] shader-nopow-19

---
 .../shaders/GLES/2.0/gles_yuv2rgb_basic.frag  | 22 +++++++++++++++--
 system/shaders/GLES/2.0/gles_yuv2rgb_bob.frag | 24 ++++++++++++++++---
 .../VideoShaders/YUV2RGBShaderGLES.cpp        |  2 ++
 3 files changed, 43 insertions(+), 5 deletions(-)

diff --git a/system/shaders/GLES/2.0/gles_yuv2rgb_basic.frag b/system/shaders/GLES/2.0/gles_yuv2rgb_basic.frag
index d76a3b8..47dcd7d 100644
--- a/system/shaders/GLES/2.0/gles_yuv2rgb_basic.frag
+++ b/system/shaders/GLES/2.0/gles_yuv2rgb_basic.frag
@@ -63,9 +63,27 @@ void main()
   rgb.a = m_alpha;
 
 #if defined(XBMC_COL_CONVERSION)
-  rgb.rgb = pow(max(vec3(0), rgb.rgb), vec3(m_gammaSrc));
+  vec4 tmp;
+  vec4 tmp2;
+  tmp.rgb = max(vec3(0), rgb.rgb);
+  float a = 0.1854;
+  float b = 0.8516;
+  float c = -0.0357;
+  float ai = 0.06981272;
+  float bi = -0.2543179;
+  float ci = 1.18681715;
+#if defined(XBMC_COL_GAMMA_2_4)
+  a = 0.3856;
+  b = 0.6641;
+  c = -0.2034;
+  ai = 0.14334285;
+  bi = -0.50023754;
+  ci = 1.36175809;
+#endif
+  tmp2.rgb = tmp.rgb * tmp.rgb;
+  rgb.rgb = tmp2.rgb * tmp.rgb * a + tmp2.rgb * b + c * tmp.rgb;
   rgb.rgb = max(vec3(0), m_primMat * rgb.rgb);
-  rgb.rgb = pow(rgb.rgb, vec3(m_gammaDstInv));
+  rgb.rgb = ai * rgb.rgb*rgb.rgb + bi * rgb.rgb + ci * sqrt(rgb.rgb);
 
 #if defined(KODI_TONE_MAPPING_REINHARD)
   float luma = dot(rgb.rgb, m_coefsDst);
diff --git a/system/shaders/GLES/2.0/gles_yuv2rgb_bob.frag b/system/shaders/GLES/2.0/gles_yuv2rgb_bob.frag
index a82de9d..e5078ad 100644
--- a/system/shaders/GLES/2.0/gles_yuv2rgb_bob.frag
+++ b/system/shaders/GLES/2.0/gles_yuv2rgb_bob.frag
@@ -20,7 +20,7 @@
 
 #version 100
 
-precision highp float;
+precision mediump float;
 uniform sampler2D m_sampY;
 uniform sampler2D m_sampU;
 uniform sampler2D m_sampV;
@@ -84,9 +84,27 @@ void main()
   rgb = mix(rgb, rgbBelow, 0.5);
 
 #if defined(XBMC_COL_CONVERSION)
-  rgb.rgb = pow(max(vec3(0), rgb.rgb), vec3(m_gammaSrc));
+  vec4 tmp;
+  vec4 tmp2;
+  tmp.rgb = max(vec3(0), rgb.rgb);
+  float a = 0.1854;
+  float b = 0.8516;
+  float c = -0.0357;
+  float ai = 0.06981272;
+  float bi = -0.2543179;
+  float ci = 1.18681715;
+#if defined(XBMC_COL_GAMMA_2_4)
+  a = 0.3856;
+  b = 0.6641;
+  c = -0.2034;
+  ai = 0.14334285;
+  bi = -0.50023754;
+  ci = 1.36175809;
+#endif
+  tmp2.rgb = tmp.rgb * tmp.rgb;
+  rgb.rgb = tmp2.rgb * tmp.rgb * a + tmp2.rgb * b + c * tmp.rgb;
   rgb.rgb = max(vec3(0), m_primMat * rgb.rgb);
-  rgb.rgb = pow(rgb.rgb, vec3(m_gammaDstInv));
+  rgb.rgb = ai * rgb.rgb*rgb.rgb + bi * rgb.rgb + ci * sqrt(rgb.rgb);
 
 #if defined(KODI_TONE_MAPPING_REINHARD)
   float luma = dot(rgb.rgb, m_coefsDst);
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/VideoShaders/YUV2RGBShaderGLES.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/VideoShaders/YUV2RGBShaderGLES.cpp
index 7282dbf..956107c 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/VideoShaders/YUV2RGBShaderGLES.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/VideoShaders/YUV2RGBShaderGLES.cpp
@@ -52,6 +52,8 @@ BaseYUV2RGBGLSLShader::BaseYUV2RGBGLSLShader(EShaderFormat format,
   {
     m_colorConversion = true;
     m_defines += "#define XBMC_COL_CONVERSION\n";
+    if (srcPrimaries == AVCOL_PRI_BT2020) // Only support BT2020 as input for now
+      m_defines += "#define XBMC_COL_GAMMA_2_4\n";
   }
 
   if (toneMap)
