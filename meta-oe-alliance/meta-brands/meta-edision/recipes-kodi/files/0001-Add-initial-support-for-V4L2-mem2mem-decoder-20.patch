From 61678f062567e3cbad1e4bc9fdcdde7bb4624887 Mon Sep 17 00:00:00 2001
From: Captain <captain.onboard@web.de>
Date: Sat, 19 Feb 2022 09:06:45 +0100
Subject: [PATCH] Add-initial-support-for-V4L2-mem2mem-decoder-20

---
 .../DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp   | 21 +++++++++++++++++++
 .../DVDCodecs/Video/DVDVideoCodecFFmpeg.h     |  1 +
 2 files changed, 22 insertions(+)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp
index 2684df3f2f..22c222a5d2 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.cpp
@@ -344,6 +344,17 @@ bool CDVDVideoCodecFFmpeg::Open(CDVDStreamInfo &hints, CDVDCodecOptions &options
   if (hints.codec == AV_CODEC_ID_AV1 && m_decoderState != STATE_HW_FAILED)
     pCodec = avcodec_find_decoder_by_name("av1");
 
+  if (hints.codecOptions & CODEC_ALLOW_FALLBACK) {
+    if (hints.codec == AV_CODEC_ID_H264)
+      pCodec = avcodec_find_decoder_by_name("h264_v4l2m2m");
+    else if (hints.codec == AV_CODEC_ID_VP9)
+      pCodec = avcodec_find_decoder_by_name("vp9_v4l2m2m");
+    else if (hints.codec == AV_CODEC_ID_HEVC)
+      pCodec = avcodec_find_decoder_by_name("hevc_v4l2m2m");
+    if (pCodec)
+      m_decoderV4l2m2m = true;
+  }
+
   if (!pCodec)
     pCodec = avcodec_find_decoder(hints.codec);
 
@@ -365,6 +376,12 @@ bool CDVDVideoCodecFFmpeg::Open(CDVDStreamInfo &hints, CDVDCodecOptions &options
   m_pCodecContext->workaround_bugs = FF_BUG_AUTODETECT;
   m_pCodecContext->get_format = GetFormat;
   m_pCodecContext->codec_tag = hints.codec_tag;
+  if (m_decoderV4l2m2m) {
+    m_pCodecContext->time_base.num = 1;
+    m_pCodecContext->time_base.den = DVD_TIME_BASE;
+    m_pCodecContext->pkt_timebase.num = 1;
+    m_pCodecContext->pkt_timebase.den = DVD_TIME_BASE;
+  }
 
   // setup threading model
   if (!(hints.codecOptions & CODEC_FORCE_SOFTWARE))
@@ -760,6 +777,8 @@ CDVDVideoCodec::VCReturn CDVDVideoCodecFFmpeg::GetPicture(VideoPicture* pVideoPi
 
   // here we got a frame
   int64_t framePTS = m_pDecodedFrame->best_effort_timestamp;
+  if (m_decoderV4l2m2m)
+    framePTS = m_pDecodedFrame->pts;
 
   if (m_pCodecContext->skip_frame > AVDISCARD_DEFAULT)
   {
@@ -1103,6 +1122,8 @@ bool CDVDVideoCodecFFmpeg::GetPictureCommon(VideoPicture* pVideoPicture)
   m_dts = DVD_NOPTS_VALUE;
 
   int64_t bpts = m_pFrame->best_effort_timestamp;
+  if (m_decoderV4l2m2m)
+    bpts = m_pFrame->pts;
   if (bpts != AV_NOPTS_VALUE)
   {
     pVideoPicture->pts = (double)bpts * DVD_TIME_BASE / AV_TIME_BASE;
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.h
index 86c83cd1a0..c6d4a7321e 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecFFmpeg.h
@@ -98,6 +98,7 @@ protected:
   double m_DAR = 1.0;
   CDVDStreamInfo m_hints;
   CDVDCodecOptions m_options;
+  bool m_decoderV4l2m2m = false;
 
   struct CDropControl
   {
-- 
2.34.1.windows.1

